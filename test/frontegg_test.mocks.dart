// Mocks generated by Mockito 5.0.17 from annotations
// in frontegg_mobile/test/frontegg_test.dart.
// Do not manually edit this file.

import 'dart:async' as i8;

import 'package:dio/src/adapter.dart' as i3;
import 'package:dio/src/cancel_token.dart' as i9;
import 'package:dio/src/dio.dart' as i7;
import 'package:dio/src/dio_mixin.dart' as i5;
import 'package:dio/src/options.dart' as i2;
import 'package:dio/src/response.dart' as i6;
import 'package:dio/src/transformer.dart' as i4;
import 'package:mockito/mockito.dart' as i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeBaseOptions_0 extends i1.Fake implements i2.BaseOptions {}

class _FakeHttpClientAdapter_1 extends i1.Fake implements i3.HttpClientAdapter {}

class _FakeTransformer_2 extends i1.Fake implements i4.Transformer {}

class _FakeInterceptors_3 extends i1.Fake implements i5.Interceptors {}

class _FakeResponse_4<T> extends i1.Fake implements i6.Response<T> {}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends i1.Mock implements i7.Dio {
  MockDio() {
    i1.throwOnMissingStub(this);
  }

  @override
  i2.BaseOptions get options =>
      (super.noSuchMethod(Invocation.getter(#options), returnValue: _FakeBaseOptions_0()) as i2.BaseOptions);
  @override
  set options(i2.BaseOptions? options) =>
      super.noSuchMethod(Invocation.setter(#options, options), returnValueForMissingStub: null);
  @override
  i3.HttpClientAdapter get httpClientAdapter =>
      (super.noSuchMethod(Invocation.getter(#httpClientAdapter), returnValue: _FakeHttpClientAdapter_1())
          as i3.HttpClientAdapter);
  @override
  set httpClientAdapter(i3.HttpClientAdapter? httpClientAdapter) =>
      super.noSuchMethod(Invocation.setter(#httpClientAdapter, httpClientAdapter), returnValueForMissingStub: null);
  @override
  i4.Transformer get transformer =>
      (super.noSuchMethod(Invocation.getter(#transformer), returnValue: _FakeTransformer_2()) as i4.Transformer);
  @override
  set transformer(i4.Transformer? transformer) =>
      super.noSuchMethod(Invocation.setter(#transformer, transformer), returnValueForMissingStub: null);
  @override
  i5.Interceptors get interceptors =>
      (super.noSuchMethod(Invocation.getter(#interceptors), returnValue: _FakeInterceptors_3()) as i5.Interceptors);
  @override
  void close({bool? force = false}) =>
      super.noSuchMethod(Invocation.method(#close, [], {#force: force}), returnValueForMissingStub: null);
  @override
  i8.Future<i6.Response<T>> get<T>(String? path,
          {Map<String, dynamic>? queryParameters,
          i2.Options? options,
          i9.CancelToken? cancelToken,
          i2.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
          Invocation.method(#get, [
            path
          ], {
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress
          }),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> getUri<T>(Uri? uri,
          {i2.Options? options, i9.CancelToken? cancelToken, i2.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getUri, [uri], {#options: options, #cancelToken: cancelToken, #onReceiveProgress: onReceiveProgress}),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> post<T>(String? path,
          {dynamic data,
          Map<String, dynamic>? queryParameters,
          i2.Options? options,
          i9.CancelToken? cancelToken,
          i2.ProgressCallback? onSendProgress,
          i2.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
          Invocation.method(#post, [
            path
          ], {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress
          }),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> postUri<T>(Uri? uri,
          {dynamic data,
          i2.Options? options,
          i9.CancelToken? cancelToken,
          i2.ProgressCallback? onSendProgress,
          i2.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
          Invocation.method(#postUri, [
            uri
          ], {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress
          }),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> put<T>(String? path,
          {dynamic data,
          Map<String, dynamic>? queryParameters,
          i2.Options? options,
          i9.CancelToken? cancelToken,
          i2.ProgressCallback? onSendProgress,
          i2.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
          Invocation.method(#put, [
            path
          ], {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress
          }),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> putUri<T>(Uri? uri,
          {dynamic data,
          i2.Options? options,
          i9.CancelToken? cancelToken,
          i2.ProgressCallback? onSendProgress,
          i2.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
          Invocation.method(#putUri, [
            uri
          ], {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress
          }),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> head<T>(String? path,
          {dynamic data, Map<String, dynamic>? queryParameters, i2.Options? options, i9.CancelToken? cancelToken}) =>
      (super.noSuchMethod(
          Invocation.method(#head, [path],
              {#data: data, #queryParameters: queryParameters, #options: options, #cancelToken: cancelToken}),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> headUri<T>(Uri? uri, {dynamic data, i2.Options? options, i9.CancelToken? cancelToken}) =>
      (super.noSuchMethod(
          Invocation.method(#headUri, [uri], {#data: data, #options: options, #cancelToken: cancelToken}),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> delete<T>(String? path,
          {dynamic data, Map<String, dynamic>? queryParameters, i2.Options? options, i9.CancelToken? cancelToken}) =>
      (super.noSuchMethod(
          Invocation.method(#delete, [path],
              {#data: data, #queryParameters: queryParameters, #options: options, #cancelToken: cancelToken}),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> deleteUri<T>(Uri? uri, {dynamic data, i2.Options? options, i9.CancelToken? cancelToken}) =>
      (super.noSuchMethod(
          Invocation.method(#deleteUri, [uri], {#data: data, #options: options, #cancelToken: cancelToken}),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> patch<T>(String? path,
          {dynamic data,
          Map<String, dynamic>? queryParameters,
          i2.Options? options,
          i9.CancelToken? cancelToken,
          i2.ProgressCallback? onSendProgress,
          i2.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
          Invocation.method(#patch, [
            path
          ], {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress
          }),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> patchUri<T>(Uri? uri,
          {dynamic data,
          i2.Options? options,
          i9.CancelToken? cancelToken,
          i2.ProgressCallback? onSendProgress,
          i2.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
          Invocation.method(#patchUri, [
            uri
          ], {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress
          }),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  void lock() => super.noSuchMethod(Invocation.method(#lock, []), returnValueForMissingStub: null);
  @override
  void unlock() => super.noSuchMethod(Invocation.method(#unlock, []), returnValueForMissingStub: null);
  @override
  void clear() => super.noSuchMethod(Invocation.method(#clear, []), returnValueForMissingStub: null);
  @override
  i8.Future<i6.Response<dynamic>> download(String? urlPath, dynamic savePath,
          {i2.ProgressCallback? onReceiveProgress,
          Map<String, dynamic>? queryParameters,
          i9.CancelToken? cancelToken,
          bool? deleteOnError = true,
          String? lengthHeader = r'content-length',
          dynamic data,
          i2.Options? options}) =>
      (super.noSuchMethod(
              Invocation.method(#download, [
                urlPath,
                savePath
              ], {
                #onReceiveProgress: onReceiveProgress,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options
              }),
              returnValue: Future<i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>()))
          as i8.Future<i6.Response<dynamic>>);
  @override
  i8.Future<i6.Response<dynamic>> downloadUri(Uri? uri, dynamic savePath,
          {i2.ProgressCallback? onReceiveProgress,
          i9.CancelToken? cancelToken,
          bool? deleteOnError = true,
          String? lengthHeader = r'content-length',
          dynamic data,
          i2.Options? options}) =>
      (super.noSuchMethod(
              Invocation.method(#downloadUri, [
                uri,
                savePath
              ], {
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options
              }),
              returnValue: Future<i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>()))
          as i8.Future<i6.Response<dynamic>>);
  @override
  i8.Future<i6.Response<T>> request<T>(String? path,
          {dynamic data,
          Map<String, dynamic>? queryParameters,
          i9.CancelToken? cancelToken,
          i2.Options? options,
          i2.ProgressCallback? onSendProgress,
          i2.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
          Invocation.method(#request, [
            path
          ], {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress
          }),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> requestUri<T>(Uri? uri,
          {dynamic data,
          i9.CancelToken? cancelToken,
          i2.Options? options,
          i2.ProgressCallback? onSendProgress,
          i2.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
          Invocation.method(#requestUri, [
            uri
          ], {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress
          }),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
  @override
  i8.Future<i6.Response<T>> fetch<T>(i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(Invocation.method(#fetch, [requestOptions]),
          returnValue: Future<i6.Response<T>>.value(_FakeResponse_4<T>())) as i8.Future<i6.Response<T>>);
}
